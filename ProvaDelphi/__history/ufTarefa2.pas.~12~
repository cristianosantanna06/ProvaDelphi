unit ufTarefa2;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ComCtrls, Vcl.Mask;

type
  TfTarefa2 = class(TForm)
    ProgressBarThread1: TProgressBar;
    ProgressBarThread2: TProgressBar;
    ButtonIniciar: TButton;
    LabelProcesso1: TLabel;
    LabelProcesso2: TLabel;
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure ButtonIniciarClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

  TThreadProgressBar1 = class(TThread)
  private
    Fbarra:TProgressBar;
    FposIni:integer;
    FposFin:integer;
    FposAtual:integer;
  public
    property barra:TProgressBar read Fbarra write Fbarra;
    property posIni:integer read FposIni write FposIni;
    property posFin:integer read FposFin write FposFin;
    property posAtual:integer read FposAtual write FposAtual;
    procedure Execute;override;

  end;

var
  fTarefa2: TfTarefa2;



implementation

{$R *.dfm}

procedure TfTarefa2.ButtonIniciarClick(Sender: TObject);
var VThreadBarra1 : TThreadProgressBar1;
begin
  ProgressBarThread1 := TProgressBar.Create(ProgressBarThread1);
  VThreadBarra1 := TThreadProgressBar1.Create;
  VThreadBarra1.Resume;
//  VThreadBarra2 := VThreadBarra2.Create(False,ProgressBarThread2);
//  VThreadBarra1.Resume;
end;

procedure TfTarefa2.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  Destroy;
end;

procedure TThreadProgressBar1.Execute;
var i : integer;
begin
  try
    inherited;
    Fbarra := TProgressBar.Create(Fbarra);
    Fbarra.Min := FposIni;
    Fbarra.Position := FposIni;
    Fbarra.max := FposFin;
    if not Terminated then
    begin
      for I := 0 to 100 do
      begin
        Fbarra.Position := i;
      end;
    end;
  finally
    self.Terminate;
    self.free;
  end;

end;

end.
